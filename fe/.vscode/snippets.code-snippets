{
	"gql import": {
		"scope": "dart",
		"body": [
			"import 'package:fe/gql/${1:file_name}.req.gql.dart';",
			"import 'package:fe/gql/${1:file_name}.var.gql.dart';",
			"import 'package:fe/gql/${1:file_name}.data.gql.dart';"
		],
		"description": "import gql",
		"prefix": "gql-i"
	},
	"widget test": {
		"scope": "dart",
		"body": [
			"import 'package:flutter/material.dart';",
			"import 'package:flutter_test/flutter_test.dart';",
			"import 'package:provider/provider.dart';",
			"import '../../../../test_helpers/get_it_helpers.dart';",
			"import '../../../../test_helpers/pump_app.dart';",
			"",
			"void main() {",
			"  setUp(() {",
			"    registerAllMockServices();",
			"  });",
			"",
			"  Widget wrapWithDependencies({required Widget child}) {",
			"    return MultiProvider(",
			"      providers: [],",
			"      child: child,",
			"    );",
			"  }",
			"",
			"",
			"}"
			
		],
		"prefix": "widget-t",
		"description": "Testing boilerplate for widget tests"
	}
	// Place your üê¶ Flutter workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}
// Mocks generated by Mockito 5.0.9 from annotations
// in fe/test/pages/main/main_helpers/ws/ws_reactor.test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:fe/data/ws_message/ws_message.dart' as _i5;
import 'package:fe/stdlib/clients/ws_client/ws_client.dart' as _i2;
import 'package:fe/stdlib/errors/failure.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [WsClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockWsClient extends _i1.Mock implements _i2.WsClient {
  MockWsClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i2.WsConnectionState> connectionState() =>
      (super.noSuchMethod(Invocation.method(#connectionState, []),
              returnValue: Stream<_i2.WsConnectionState>.empty())
          as _i3.Stream<_i2.WsConnectionState>);
  @override
  _i3.Stream<_i4.Failure> errorStream() =>
      (super.noSuchMethod(Invocation.method(#errorStream, []),
          returnValue: Stream<_i4.Failure>.empty()) as _i3.Stream<_i4.Failure>);
  @override
  _i3.Stream<_i5.WsMessage> messageStream() => (super.noSuchMethod(
      Invocation.method(#messageStream, []),
      returnValue: Stream<_i5.WsMessage>.empty()) as _i3.Stream<_i5.WsMessage>);
  @override
  _i3.Future<void> initalize() =>
      (super.noSuchMethod(Invocation.method(#initalize, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> send(_i5.WsMessage? message) =>
      (super.noSuchMethod(Invocation.method(#send, [message]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
}

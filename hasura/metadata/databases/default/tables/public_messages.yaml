table:
  name: messages
  schema: public
object_relationships:
- name: dm
  using:
    manual_configuration:
      column_mapping:
        source_id: id
      insertion_order: null
      remote_table:
        name: dms
        schema: public
- name: thread
  using:
    manual_configuration:
      column_mapping:
        source_id: id
      insertion_order: null
      remote_table:
        name: threads
        schema: public
- name: user
  using:
    foreign_key_constraint_on: user_sent
array_relationships:
- name: message_reactions
  using:
    foreign_key_constraint_on:
      column: message_id
      table:
        name: message_reactions
        schema: public
insert_permissions:
- permission:
    backend_only: false
    check:
      _or:
      - dm:
          user_to_dms:
            user_id:
              _eq: X-Hasura-User-Id
      - thread:
          users:
            user_id:
              _eq: X-Hasura-User-Id
    columns:
    - body
    - id
    - message_type
    - source_id
    - updated_at
    set:
      user_sent: x-hasura-User-Id
  role: user
select_permissions:
- permission:
    columns:
    - body
    - created_at
    - id
    - message_type
    - source_id
    - updated_at
    - user_sent
    filter:
      _or:
      - dm:
          user_to_dms:
            user_id:
              _eq: X-Hasura-User-Id
      - thread:
          users:
            user_id:
              _eq: X-Hasura-User-Id
  role: user
event_triggers:
- definition:
    enable_manual: false
    insert:
      columns: "*"
  headers:
  - name: WEBHOOK_SECRET_KEY
    value_from_env: WEBHOOK_SECRET_KEY
  name: on_new_message
  retry_conf:
    interval_sec: 10
    num_retries: 0
    timeout_sec: 60
  webhook: "{{WEBHOOK_URL}}/api/notifications/messageSent"
